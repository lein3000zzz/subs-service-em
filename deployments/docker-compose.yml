services:

  app:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ../prod.env
    ports:
      - "8080:8080"

  db:
    container_name: postgres
    image: postgres:16
    env_file:
      - ../prod.env
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d subscriptions"]
      interval: 30s
      timeout: 5s
      retries: 10

  migrate:
    image: postgres:16
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ../prod.env
    volumes:
      - ./migration.sql:/migration.sql:ro
    entrypoint: ["sh","-c","PGPASSWORD=$$POSTGRES_PASSWORD psql -h db -U $$POSTGRES_USER -d $$POSTGRES_DB -f /migration.sql"]
    restart: "no"

volumes:
  dbdata: { }